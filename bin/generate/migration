#!/usr/bin/env python3
import time
import os
import sys

if len(sys.argv) == 2:
    name = sys.argv[1]
else:
    print("pass a filename: eg. ./bin/generate/migration add_bio_column")
    exit(0)

timestamp = str(int(time.time()))

filename = f"{timestamp}_{name}.py"

# covert undername name to title case eg. add_bio_column -> AddBioColumn
klass = name.replace('_', ' ').title().replace(' ', '')

file_content = f"""
from lib.db import db

class {klass}Migration:

    def migrate_sql():
        data = \"\"\"
        \"\"\"
        return data
        
    def rollback_sql():
        data = \"\"\"
        \"\"\"
        return data
        
    def migrate():
        db.query_commit({klass}Migration.migrate_sql(),{{
        }})
        
    def rollback():
        db.query_commit({klass}Migration.rollback_sql(),{{
        }})
        
migration = AddBioColumnMigration
"""
# remove leading and trailing new lines
file_content = file_content.lstrip('\n').rstrip('\n')

current_path = os.path.dirname(os.path.abspath(__file__))
file_path = os.path.abspath(os.path.join(
    current_path, '..', '..', 'backend-flask', 'db', 'migrations', filename))
print(file_path)

with open(file_path, 'w') as f:
    f.write(file_content)
