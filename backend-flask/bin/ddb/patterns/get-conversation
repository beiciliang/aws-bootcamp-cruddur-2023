#!/usr/bin/env python3

import boto3
import sys
import json
import datetime

attrs = {
    'endpoint_url': 'http://localhost:8000'
}

if len(sys.argv) == 2:
    if "prod" in sys.argv[1]:
        attrs = {}

dynamodb = boto3.client('dynamodb', **attrs)
table_name = 'cruddur-messages'

message_group_uuid = "5ae290ed-55d1-47a0-bc6d-fe2bc2700399"

# define the query parameters
current_year = datetime.datetime.now().year
query_params = {
    'TableName': table_name,
    'ScanIndexForward': False,
    'Limit': 20,
    'ReturnConsumedCapacity': 'TOTAL',
    'KeyConditionExpression': 'pk = :pk AND begins_with(sk,:year)',
    # 'KeyConditionExpression': 'pk = :pk AND sk BETWEEN :start_date AND :end_date',
    'ExpressionAttributeValues': {
        ':year': {'S': '2023'},
        # ":start_date": { "S": "2023-03-01T00:00:00.000000+00:00" },
        # ":end_date": { "S": "2023-03-19T23:59:59.999999+00:00" },
        ':pk': {'S': f"MSG#{message_group_uuid}"}
    }
}


# query the table
response = dynamodb.query(**query_params)

# print the items returned by the query
print(json.dumps(response, sort_keys=True, indent=2))

# print the consumed capacity
print(json.dumps(response['ConsumedCapacity'], sort_keys=True, indent=2))

items = response['Items']
items.reverse()

for item in items:
    sender_handle = item['user_handle']['S']
    message = item['message']['S']
    timestamp = item['sk']['S']
    dt_object = datetime.datetime.strptime(timestamp, '%Y-%m-%dT%H:%M:%S.%f%z')
    formatted_datetime = dt_object.strftime('%Y-%m-%d %I:%M %p')
    print(f'{sender_handle: <12}{formatted_datetime: <22}{message[:40]}...')
